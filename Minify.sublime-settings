{
	/*
	 * #####################
	 * #  Global Settings  #
	 * #####################
	 */

	/*
	 * Save the file before doing any action (minify or beautify)?
	 */
	"save_first": true,

	/*
	 * Auto-minify files on save?
	 */
	"auto_minify_on_save": false,

	/*
	 * Open resulting file (minified or beautified)?
	 */
	"open_file": true,

	/*
	 * Only Minify specified file types (css, js, json, html, svg) when "auto_minify_on_save" is used.
	 */
	"allowed_file_types": [
		"css",
		"js",
		"json",
		"html",
		"svg"
	],


	/*
	 * ############################
	 * #  CSS Processing Options  #
	 * ############################
	 */

	/*
	 * You can specify which CSS minifier to use such as "clean-css", "uglifycss" or "yui".
	 * Notes: The default is "clean-css"; you must have java installed for "yui".
	 */
	// "cssminifier": "clean-css",

	/*
	 * You may want to define the cleancss command with an absolute path.
	 */
	// "cleancss_command": "/usr/local/bin/cleancss",

	/*
	 * You can specify command line parameters for cleancss.
	 */
	"cleancss_options": "-O2 --skip-rebase",

	/*
	 * You may want to define the uglifycss command with an absolute path.
	 */
	// "uglifycss_command": "/usr/local/bin/uglifycss",

	/*
	 * You can specify command line parameters for uglifycss.
	 */
	// "uglifycss_options": "--max-line-len 250",

	/*
	 * You may want to define the js-beautify command with an absolute path.
	 */
	// "js-beautify_command": "/usr/local/bin/js-beautify",

	/*
	 * You can specify command line parameters for .css beautification.
	 */
	// "js-beautify_options": "--indent-size=2",

	/*
	 * If you need a CSS source map (supported by clean-css only) in the destination directory (same as original source), enable this option.
	 */
	"css_source_map": false,


	/*
	 * ###################################
	 * #  JavaScript Processing Options  #
	 * ###################################
	 */

	/*
	 * You may want to define the uglifyjs command with an absolute path.
	 */
	// "uglifyjs_command": "/usr/local/bin/uglifyjs",

	/*
	 * You can specify command line parameters for uglifyjs (for .js minification).
	 */
	// "uglifyjs_options": "",

	/*
	 * Do you want to keep comments when minifying javascript files?
	 */
	"keep_comments": false,

	/*
	 * You can also specify which comments to keep.
	 * If you set `keep_comments` to true and leave `comments_to_keep` false then uglifyjs will only keep JSDoc-style copyright comments.
	 * However, if you set `keep_comments` to true then you can also specify which comments to keep: set `comments_to_keep` to "all" to keep
	 * all comments or you can provide a regexp such as "/!/" (this will keep only comments which contain an exclamation mark).
	 */
	"comments_to_keep": false,

	/*
	 * You can specify command line parameters for uglifyjs (for .js beautification).
	 */
	// "uglifyjs_pretty_options": "indent-level=2",

	/*
	 * If you need a source map in the destination directory (same as original source), enable this option.
	 */
	"source_map": false,

	/*
	 * Change to true if you are using any transpiler such as Babel or Typescript that generate map files for original code.
	 * Map file must be present in the same directory.
	 */
	"js_map_content": false,


	/*
	 * #############################
	 * #  HTML Processing Options  #
	 * #############################
	 */

	/*
	 * You may want to define the html-minifier command with an absolute path.
	 */
	// "html-minifier_command": "/usr/local/bin/html-minifier",

	/*
	 * You can specify command line parameters for .html minification.
	 */
	"html-minifier_options": "--collapse-boolean-attributes --collapse-whitespace --html5 --minify-css --minify-js --preserve-line-breaks --process-conditional-comments --remove-comments --remove-empty-attributes --remove-redundant-attributes --remove-script-type-attributes --remove-style-link-type-attributes --quote-character '",

	/*
	 * You can specify command line parameters for .html beautification.
	 */
	// "js-beautify_html_options": "--indent-size=2",


	/*
	 * #############################
	 * #  JSON Processing Options  #
	 * #############################
	 */

	/*
	 * You may want to define the minjson command with an absolute path.
	 */
	// "minjson_command": "/usr/local/bin/minjson",


	/*
	 * ############################
	 * #  SVG Processing Options  #
	 * ############################
	 */

	/*
	 * You may want to define the svgo command with an absolute path.
	 */
	// "svgo_command": "/usr/local/bin/svgo",

	/*
	 * You can specify command line parameters for .svg minification.
	 */
	// "svgo_min_options": "--multipass",

	/*
	 * You can specify command line parameters for .svg prettification.
	 */
	// "svgo_pretty_options": "--multipass"


	/*
	 * ###############
	 * #  Debugging  #
	 * ###############
	 */

	/*
	 * Enable debug mode?
	 */
	"debug_mode": false
}
